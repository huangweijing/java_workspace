<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Copy element &apos;TwoEfficientTeams.java&apos; to &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Destination element: &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original element: &apos;TwoEfficientTeams.java&apos;" description="Copy compilation unit" destination="/src&lt;" element1="/src&lt;{TwoEfficientTeams.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1524382406097" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;TwoEfficientTeams2.test(...)&apos; to &apos;calcMaxEfficient&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original element: &apos;TwoEfficientTeams2.test(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;TwoEfficientTeams2.calcMaxEfficient(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;test&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{TwoEfficientTeams2.java[TwoEfficientTeams2~test~QSet\&lt;QInteger;&gt;;~QSet\&lt;QInteger;&gt;;~QList\&lt;QGroup;&gt;;" name="calcMaxEfficient" references="true" stamp="1524383922178" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;MyTest.java&apos; to &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Destination element: &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original element: &apos;MyTest.java&apos;" description="Copy compilation unit" destination="/src&lt;" element1="/src&lt;{MyTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1524388369962" units="1" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;testcase4.txt&apos; to &apos;Hackerrank&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Destination element: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original element: &apos;testcase4.txt&apos;" description="Copy file" destination="=Hackerrank" element1="testcase4.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1524388696217" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;Dyana&apos; to &apos;DynamicArray&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original element: &apos;Dyana&apos;&#x0D;&#x0A;- Renamed element: &apos;DynamicArray&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Dyana&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;{Dyana.java[Dyana" matchStrategy="1" name="DynamicArray" qualified="false" references="true" similarDeclarations="false" stamp="1524659147147" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;seqs&apos; in &apos;DynamicArray.dynamicArray(...)&apos; to &apos;seqList&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original element: &apos;DynamicArray.dynamicArray(int, int[][]).seqs&apos;&#x0D;&#x0A;- Renamed element: &apos;seqs&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;seqs&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{DynamicArray.java[DynamicArray~dynamicArray~I~\[\[I@seqs!356!386!364!367!\[\[I!0!false" name="seqList" references="true" stamp="1524659775968" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;Hackerrank&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     DynamicArray.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{DynamicArray.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1524660081239" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;Hackerrank&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     DynamicArray.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{DynamicArray.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1524660089064" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;ArrayManipulation.java&apos; to &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original project: &apos;Hackerrank&apos;&#x0D;&#x0A;- Destination element: &apos;Hackerrank/src/(default package)&apos;&#x0D;&#x0A;- Original element: &apos;ArrayManipulation.java&apos;" description="Copy compilation unit" destination="/src&lt;" element1="/src&lt;{ArrayManipulation.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1524823333021" units="1" version="1.0"/>
</session>